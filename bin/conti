#!/bin/bash

# Check if docker and docker-compose are installed on the system 
command -v docker >/dev/null 2>&1 || { echo "docker is not installed. Aborting." >&2; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo "docker-compose is not installed. Aborting." >&2; exit 1; }

# Define some variables
export APP_NAME="conti"
export PROJECT_DIR=$(pwd -P)

# Add install location check
if [ -f "$PROJECT_DIR/flow" ] 
then
  # Flow Framework
  export PACKAGE_DIR=${PROJECT_DIR}/Packages/Libraries/egobude/conti
else
  # Default 
  export PACKAGE_DIR=${PROJECT_DIR}/vendor/egobude/conti
fi

export PLUGINS=$(ls ${PACKAGE_DIR}/plugins)
export TEMPLATES="${PACKAGE_DIR}/templates"
export CMD_USER="1000:33"
export DOCKER_COMPOSE_FILE="$(pwd)/docker-compose.yml"
export DOCKER_ENV_FILE="$(pwd)/.env"

# Define some functions
function module-exec {
	local MODULE=${1}
	if [ ! -f ${PACKAGE_DIR}/plugins/${MODULE} ]; then
		echo "Module not found. Aborting."
		exit 1
	fi
	shift
	bash ${PACKAGE_DIR}/plugins/${MODULE} $@
}

function config-exists {
    if [ ! -f ${DOCKER_COMPOSE_FILE} ]; then
      clear
      echo "docker-compose.yml not found in the current directory, call '${APP_NAME} install conti.dev' first"
      exit 1
    fi
}

help() {
    cat <<__EOF__
        ${APP_NAME} - Utility for your docker development environment
        
        Usage:
          ${APP_NAME} [command] [arguments]
          ${APP_NAME} help

        Commands:
          install             Add a docker-compose file and a .env file
          uninstall           Remove the docker-compose file and .env file
          up                  Create and start containers
          down                Stop and remove containers, networks, images, and volumes
          ps                  List containers
          logs <service>      Fetch the logs of a container
          bash <service>      Execute a command in a running container
          mysqldump           Create a mysqldump 
          composer <params>   Execute composer commands
          time                Display the current timestamp
__EOF__
    exit 1
}

case "$1" in
    help)
        help
        ;;        
    install)
        shift
        module-exec docker/install  "$@"
        ;;
    uninstall)
        config-exists
        module-exec docker/uninstall
        ;;
    mysqldump)
        config-exists
        module-exec docker/mysqldump
        ;;
    up)
        config-exists
		module-exec docker/up
		;;
    down)
        config-exists
		module-exec docker/down
		;;
    ps)
        config-exists
        module-exec docker/ps
        ;;
    logs)
        config-exists
        shift
		module-exec docker/logs "$@"
        ;;
    bash)
        config-exists
        shift
        module-exec docker/bash "$@"
        ;;
    grunt)
        config-exists
        module-exec docker/grunt "$@"
        ;;
    bower)
        config-exists
        module-exec docker/bower "$@"
        ;;
    composer)
        config-exists
        shift
        module-exec docker/composer "$@"
        ;;
    time)
        module-exec helper/time
        ;;
    *)
        help
        ;;
esac
