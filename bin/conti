#!/bin/bash

# Check if docker and docker-compose are installed on the system 
command -v docker >/dev/null 2>&1 || { echo "docker is not installed. Aborting." >&2; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo "docker-compose is not installed. Aborting." >&2; exit 1; }

# Define some variables
export APP_NAME="conti"
export PROJECT_DIR=$(pwd -P)
export PACKAGE_DIR=${PROJECT_DIR}/vendor/egobude/conti
export PLUGINS=$(ls ${PACKAGE_DIR}/plugins)
export TEMPLATES="${PACKAGE_DIR}/templates"
export CMD_USER="1000:33"
export DOCKER_COMPOSE_FILE="$(pwd)/docker-compose.yml"
export DOCKER_ENV_FILE="$(pwd)/.env"

# Define some functions
function module-exec {
	local MODULE=${1}
	if [ ! -f ${PACKAGE_DIR}/plugins/${MODULE} ]; then
		echo "Module not found. Aborting."
		exit 1
	fi
	shift
	bash ${PACKAGE_DIR}/plugins/${MODULE} $@
}

function config-exists {
    if [ ! -f ${DOCKER_COMPOSE_FILE} ]; then
      clear
      echo "docker-compose.yml not found in the current directory, call '${APP_NAME} install conti.dev' first"
      exit 1
    fi
}

case "$1" in
    install)
        shift
        module-exec docker_install  "$@"
        ;;
    uninstall)
        config-exists
        module-exec docker_uninstall
        ;;
    mysqldump)
        config-exists
        module-exec docker_mysqldump
        ;;
    up)
        config-exists
		module-exec docker_up
		;;
    down)
        config-exists
		module-exec docker_down
		;;
    ps)
        config-exists
        module-exec docker_ps
        ;;
    logs)
        config-exists
        shift
		module-exec docker_logs "$@"
        ;;
    build)
        config-exists
        shift
		module-exec docker_build "$@"
        ;;
    push)
        config-exists
        shift
		module-exec docker_push "$@"
        ;;
    bash)
        config-exists
        shift
        module-exec docker_bash "$@"
        ;;
    grunt)
        config-exists
        module-exec docker_grunt "$@"
        ;;
    bower)
        config-exists
        module-exec docker_bower "$@"
        ;;
    composer)
        config-exists
        shift
        module-exec docker_composer "$@"
        ;;
    time)
        module-exec helper_time
        ;;
    *)
        echo "Module not found. Aborting!"
        exit 1
    ;;
esac